[{"content":"Editor + Terminal  Visual Studio Code is my editor by choice for working with JS. I\u0026rsquo;m also use Sublime Text for my PHP/Laravel development. I use Dunk Mono \u0026amp; Fira Code for a font in my code editor. I use VS Code integrated terminal on VS Code. Alternatively, I use iTerm2 (+Zsh) ðŸ–¥ I keep VS Code \u0026amp; Sublime Text configurations up-to-date across all my computers with Settings Sync extension \u0026amp; one drive.  Desktop and Mobile Apps  My primary browser is Google Chrome. Sometimes I switch between Opera Browser and Firefox Chrome, Calendar, iTerm2, Sublime Text, Notes, VS Code are in Dock Every day used Apps on my phone are What\u0026rsquo;s App, LinkedIn, Google Authenticator, Gmail, Youtube, Twitter, Facebook and etc. Primarily I use WhatsApp for personal communication and MS Team for work I keep track all of my expenses at Money Lover The phone \u0026amp; laptop consumes a big chunk of my time. ðŸ˜†  Desk Setup  I write code on my Macbook Pro 2015 15\u0026quot; A one-liter water bottle and some snacks are always found on my desk  Languages I speak  Bangla, English  Entertainment \u0026amp; Hobbies  Reading Books Travelling Watching Youtube Play with Kids.  {\u0026ldquo;mode\u0026rdquo;:\u0026ldquo;full\u0026rdquo;,\u0026ldquo;isActive\u0026rdquo;:false}\n","permalink":"http://blog.msar.me/uses/","summary":"Editor + Terminal  Visual Studio Code is my editor by choice for working with JS. I\u0026rsquo;m also use Sublime Text for my PHP/Laravel development. I use Dunk Mono \u0026amp; Fira Code for a font in my code editor. I use VS Code integrated terminal on VS Code. Alternatively, I use iTerm2 (+Zsh) ðŸ–¥ I keep VS Code \u0026amp; Sublime Text configurations up-to-date across all my computers with Settings Sync extension \u0026amp; one drive.","title":"Uses"},{"content":"Here is a list of best practice \u0026amp; clean codes guideline. Follow the links to learn about best practice.\nSoftware Development  Software Development  Best Practice in PHP  PHP the right way - Live Laravel Best Practice  Best Practice in JS  NodeJS  Best Practice in Android  Android  Clean Codes  Software Dev JavaScript TypeScript PHP DotNet  Bonus  Checklist   Last updated: June 24, 2021\n ","permalink":"http://blog.msar.me/posts/best-practices-in-software-development/","summary":"Here is a list of best practice \u0026amp; clean codes guideline. Follow the links to learn about best practice.\nSoftware Development  Software Development  Best Practice in PHP  PHP the right way - Live Laravel Best Practice  Best Practice in JS  NodeJS  Best Practice in Android  Android  Clean Codes  Software Dev JavaScript TypeScript PHP DotNet  Bonus  Checklist   Last updated: June 24, 2021","title":"Best Practices in Software Development"},{"content":"Android Debug Bridge (adb) is a versatile command-line tool that lets you communicate with a device. The adb command facilitates a variety of device actions, such as installing and debugging apps, and it provides access to a Unix shell that you can use to run a variety of commands on a device. It is a client-server program that includes three components:\n A client, which sends commands. The client runs on your development machine. You can invoke a client from a command-line terminal by issuing an adb command. A daemon (adbd), which runs commands on a device. The daemon runs as a background process on each device. A server, which manages communication between the client and the daemon. The server runs as a background process on your development machine.  Here is a list of adb commands and there usages.\nADB Basics adb devices (lists connected devices)\nadb root (restarts adbd with root permissions)\nadb start-server (starts the adb server)\nadb kill-server (kills the adb server)\nadb reboot (reboots the device)\nadb devices -l (list of devices by product/model)\nadb shell (starts the backround terminal)\nexit (exits the background terminal)\nadb help (list all commands)\nadb -s  (redirect command to specific device)\nadb â€“d  (directs command to only attached USB device)\nadb â€“e  (directs command to only attached emulator)\nPackage Installation adb shell install  (install app)\nadb shell install  (install app from phone path)\nadb shell install -r  (install app from phone path)\nadb shell uninstall  (remove the app)\nPaths /data/data//databases (app databases)\n/data/data//shared_prefs/ (shared preferences)\n/data/app (apk installed by user)\n/system/app (pre-installed APK files)\n/mmt/asec (encrypted apps) (App2SD)\n/mmt/emmc (internal SD Card)\n/mmt/adcard (external/Internal SD Card)\n/mmt/adcard/external_sd (external SD Card)\nadb shell ls (list directory contents)\nadb shell ls -s (print size of each file)\nadb shell ls -R (list subdirectories recursively)\nFile Operations adb push  (copy file/dir to device)\nadb pull  (copy file/dir from device)\nrun-as cat  (access the private package files)\nPhone Info adb get-statÐµ (print device state)\nadb get-serialno (get the serial number)\nadb shell dumpsys iphonesybinfo (get the IMEI)\nadb shell netstat (list TCP connectivity)\nadb shell pwd (print current working directory)\nadb shell dumpsys battery (battery status)\nadb shell pm list features (list phone features)\nadb shell service list (list all services)\nadb shell dumpsys activity / (activity info)\nadb shell ps (print process status)\nadb shell wm size (displays the current screen resolution)\ndumpsys window windows | grep -E \u0026lsquo;mCurrentFocus|mFocusedApp\u0026rsquo; (print current app\u0026rsquo;s opened activity)\nPackage Info adb shell list packages (list package names)\nadb shell list packages -r (list package name + path to apks)\nadb shell list packages -3 (list third party package names)\nadb shell list packages -s (list only system packages)\nadb shell list packages -u (list package names + uninstalled)\nadb shell dumpsys package packages (list info on all apps)\nadb shell dump  (list info on one package)\nadb shell path  (path to the apk file)\nConfigure Settings Commands adb shell dumpsys battery set level  (change the level from 0 to 100)\nadb shell dumpsys battery set status (change the level to unknown, charging, discharging, not charging or full)\nadb shell dumpsys battery reset (reset the battery)\nadb shell dumpsys battery set usb  (change the status of USB connection. ON or OFF)\nadb shell wm size WxH (sets the resolution to WxH)\nDevice Related Commands adb reboot-recovery (reboot device into recovery mode)\nadb reboot fastboot (reboot device into recovery mode)\nadb shell screencap -p \u0026ldquo;/path/to/screenshot.png\u0026rdquo; (capture screenshot)\nadb shell screenrecord \u0026ldquo;/path/to/record.mp4\u0026rdquo; (record device screen)\nadb backup -apk -all -f backup.ab (backup settings and apps)\nadb backup -apk -shared -all -f backup.ab (backup settings, apps and shared storage)\nadb backup -apk -nosystem -all -f backup.ab (backup only non-system apps)\nadb restore backup.ab (restore a previous backup)\nadb shell am start|startservice|broadcast []\n-a e.g. android.intent.action.VIEW\n-c e.g. android.intent.category.LAUNCHER (start activity intent)\nadb shell am start -a android.intent.action.VIEW -d URLÂ (open URL)\nadb shell am start -t image/* -a android.intent.action.VIEW (opens gallery)\nLogs adb logcat [options] [filter] [filter] (view device log)\nadb bugreport (print bug reports)\nPermissions adb shell permissions groups (list permission groups definitions)\nadb shell list permissions -g -r (list permissions details)\nThis post collected from Here\n","permalink":"http://blog.msar.me/posts/adb-cheat-sheet/","summary":"Android Debug Bridge (adb) is a versatile command-line tool that lets you communicate with a device. The adb command facilitates a variety of device actions, such as installing and debugging apps, and it provides access to a Unix shell that you can use to run a variety of commands on a device. It is a client-server program that includes three components:\n A client, which sends commands. The client runs on your development machine.","title":"ADB Cheat Sheet"},{"content":" Be yourself; Everyone else is already taken.\nâ€” Oscar Wilde.\n Hi, Iâ€™m Saiful Alam Rakib (Software Engineer).\nI\u0026rsquo;m expertise with PHP, Laravel, JS, ReactJS.\nCurrently I\u0026rsquo;m working as a Associate Software Engineer in Digital Healthcare Solutions (Former Telenor Health).\nI\u0026rsquo;m working as a Developer since 2018.\nThis is my personal blogs. As a personal blog, here I will write my personal opinion, personal thought, my suggestion, my advice to others etc. I hope, Iâ€™ll write about my career, my tours \u0026amp; travels moments, my strategies etc.\nAs usually I use this(MSAR) as a short-form of my name, many of my friends and colleagues asked to me, what the thing is this(MSAR). Let clearing the matter, Mohammad Saiful Alam Rakib is my Full name and the first alphabet of each word in side by side make MSAR and thatâ€™s why I use this everywhere.\n","permalink":"http://blog.msar.me/posts/about-myself/","summary":"Be yourself; Everyone else is already taken.\nâ€” Oscar Wilde.\n Hi, Iâ€™m Saiful Alam Rakib (Software Engineer).\nI\u0026rsquo;m expertise with PHP, Laravel, JS, ReactJS.\nCurrently I\u0026rsquo;m working as a Associate Software Engineer in Digital Healthcare Solutions (Former Telenor Health).\nI\u0026rsquo;m working as a Developer since 2018.\nThis is my personal blogs. As a personal blog, here I will write my personal opinion, personal thought, my suggestion, my advice to others etc.","title":"About Myself \u0026 My Blogs"},{"content":"Introduction TokenLite is a CodeCanyon Product, developed during when I was in Softnio\nSoftnio introducing full functional dashboard for managing your ICO / STO token sale. TokenLite â€“ ICO Script brings all kind of components, functional features that helps to Cryptocurrency Agencies / Startup to Lunching their ICO, sale their token, and get contribution from investor.\nTools Used For the development of this product we are used Laravel for the application with blade template engine.\nThere was used many public apis for getting data for pricing, currency rate, payment etc.\n","permalink":"http://blog.msar.me/posts/projects/token-lite/","summary":"Introduction TokenLite is a CodeCanyon Product, developed during when I was in Softnio\nSoftnio introducing full functional dashboard for managing your ICO / STO token sale. TokenLite â€“ ICO Script brings all kind of components, functional features that helps to Cryptocurrency Agencies / Startup to Lunching their ICO, sale their token, and get contribution from investor.\nTools Used For the development of this product we are used Laravel for the application with blade template engine.","title":"TokenLite - A Codecanyon Project"}]